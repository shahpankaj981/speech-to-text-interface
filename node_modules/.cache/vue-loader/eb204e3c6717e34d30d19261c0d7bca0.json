{"remainingRequest":"/home/pankaj/audio/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pankaj/audio/src/components/Audio.vue?vue&type=style&index=0&id=2fd7e70c&scoped=true&lang=css&","dependencies":[{"path":"/home/pankaj/audio/src/components/Audio.vue","mtime":1568818641483},{"path":"/home/pankaj/audio/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/pankaj/audio/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/pankaj/audio/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/pankaj/audio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pankaj/audio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.main-box {\n  box-shadow: 0px 0px 10px 5px darkslategrey !important;\n  flex: 100% !important;\n}\n\n.icon {\n  vertical-align: middle;\n  font-size: 1em;\n  color: inherit;\n  height: 2rem;\n  width: 2rem;\n}\n\n.loader {\n  border: 16px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 16px solid #3498db;\n  width: 30px;\n  height: 30px;\n  -webkit-animation: spin 2s linear infinite; /* Safari */\n  animation: spin 2s linear infinite;\n}\n\n/* Safari */\n@-webkit-keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n  }\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n",{"version":3,"sources":["Audio.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgWA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Audio.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"row container-fluid\">\n    <div class=\"col-md-2\"></div>\n    <div class=\"col-md-8\">\n      <b-card class=\"main-box\" no-block>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <b-tabs>\n              <br><br>\n              <b-tab title=\"Upload File\">\n                <b>Upload File</b> &nbsp;\n                <input type=\"file\" ref=\"file\" v-on:change=\"handleFileChange()\">\n\n                <br>\n                <div class=\"row\">\n                  <div class=\"col-md-12\">\n                    <hr>\n                    <button class=\"btn btn-outline-primary btn-block\"\n                            @click=\"submitFile\" v-if=\"!uploadingStatus\">\n                      Submit\n                    </button>\n\n                    <button class=\"btn btn-block btn-primary\" type=\"button\" v-else disabled>\n                      <span class=\"spinner-border spinner-border-sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"></span>\n                      &nbsp;&nbsp;&nbsp;<span v-text=\"uploadingStatusText\"></span>\n                    </button>\n                  </div>\n                </div>\n              </b-tab>\n              <b-tab title=\"Record Audio\">\n                <div style=\"text-align: left !important;\">\n                  <!--              <button >Primary</button>-->\n\n                  <button type=\"button\"\n                          class=\"btn btn-outline-success btn-block\"\n                          @click=\"start\"\n                          v-if=\"recordButton\">\n        <span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\"\n               viewBox=\"0 0 32 32\"\n               fill=\"#000000\"\n               class=\"icon\">\n            <path d=\"M16,23.1c3.9,0,7-3.1,7-7v-2v-1v-2v-1v-2c0-3.9-3.1-7-7-7s-7,3.1-7,7v2v1v2v1v2C9,20,12.1,23.1,16,23.1z M13,14.1h-2v-1h2c0.6,0,1-0.4,1-1s-0.4-1-1-1h-2v-1h2c0.6,0,1-0.4,1-1s-0.4-1-1-1h-2c0-2.8,2.2-5,5-5s5,2.2,5,5h-2 c-0.6,0-1,0.4-1,1s0.4,1,1,1h2v1h-2c-0.6,0-1,0.4-1,1s0.4,1,1,1h2v1h-2c-0.6,0-1,0.4-1,1s0.4,1,1,1h2c0,2.8-2.2,5-5,5s-5-2.2-5-5h2 c0.6,0,1-0.4,1-1S13.6,14.1,13,14.1z\">\n            </path>\n            <path\n                d=\"M26,16.1h-2c0,4.4-3.6,8-8,8s-8-3.6-8-8H6c0,5.2,4,9.4,9,9.9v3.1h-3v2h3h2h3v-2h-3V26 C22,25.5,26,21.3,26,16.1z\">\n            </path>\n          </svg>\n        </span>&nbsp;\n                    <span>Start Recording</span>\n                  </button>\n                  <button type=\"button\"\n                          class=\"button btn-outline-danger btn-block\"\n                          v-if=\"!recordButton\"\n                          @click=\"stop\">\n        <span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\"\n               viewBox=\"0 0 32 32\"\n               fill=\"#FFFFFF\"\n               width=\"16\"\n               height=\"16\"\n               class=\"icon icon\">\n            <rect x=\"10\" y=\"10\" width=\"12\" height=\"12\"></rect>\n            <path d=\"M15.6,2.1c-7.7,0-14,6.3-14,14s6.3,14,14,14s14-6.3,14-14S23.3,2.1,15.6,2.1z M15.6,28.1 c-6.6,0-12-5.4-12-12s5.4-12,12-12s12,5.4,12,12S22.2,28.1,15.6,28.1z\"></path>\n          </svg>\n        </span>\n                    Stop\n                  </button>\n                </div>\n                <div class=\"row\" v-if=\"show\">\n                  <div class=\"col-md-4\">\n                    <audio id=\"audio-player\" controls :src=\"source\">\n                    </audio>\n                    <button class=\"button button-radius-12\" @click=\"remove\">\n                      Remove\n                    </button>\n                  </div>\n                </div>\n\n                <br>\n                <div class=\"row\">\n                  <div class=\"col-md-12\">\n                    <hr>\n                    <button class=\"btn btn-outline-primary btn-block\"\n                            @click=\"submitFile\" v-if=\"!uploadingStatus\">\n                      Submit\n                    </button>\n\n                    <button class=\"btn btn-block btn-primary\" type=\"button\" v-else disabled>\n                      <span class=\"spinner-border spinner-border-sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"></span>\n                      &nbsp;&nbsp;&nbsp;<span v-text=\"uploadingStatusText\"></span>\n                    </button>\n                  </div>\n                </div>\n              </b-tab>\n              <b-tab title=\"Register Meeting\" :baseurl=\"this.baseurl\" :disabled=\"!savedAudioFile\">\n                <register-meeting :savedAudioFile=\"savedAudioFile\"\n                                  @meetingSaved=\"handleMeetingSaved\"></register-meeting>\n              </b-tab>\n              <b-tab title=\"Register User\" :baseurl=\"this.baseurl\" :disabled=\"!meetingId\">\n                <register-user></register-user>\n              </b-tab>\n              <b-tab title=\"Train Voice\" :baseurl=\"this.baseurl\" :disabled=\"!meetingId\"\n                     @click=\"getUsers\">\n                <train-voice :audioname=\"savedAudioFile\"\n                             :audiofullpath=\"audioFullPath\"\n                             :users=\"users\"\n                             @voiceRecognized=\"handleVoiceRecognized\"\n                             :meetingid=\"meetingId\"></train-voice>\n              </b-tab>\n            </b-tabs>\n          </div>\n        </div>\n        <br>\n\n        <!--        <div class=\"row\" v-if=\"uploadResponse\">-->\n        <!--          <div class=\"col-md-12\">-->\n        <!--&lt;!&ndash;            <div class=\"row\">&ndash;&gt;-->\n        <!--&lt;!&ndash;              <div class=\"col-md-4\">&ndash;&gt;-->\n        <!--&lt;!&ndash;                <button class=\"button button-radius-8\" @click=\"cropTime('start')\">Start</button>&ndash;&gt;-->\n        <!--&lt;!&ndash;                <button class=\"button button-radius-8\" @click=\"cropTime('end')\">End</button>&ndash;&gt;-->\n        <!--&lt;!&ndash;              </div>&ndash;&gt;-->\n        <!--&lt;!&ndash;            </div>&ndash;&gt;-->\n        <!--&lt;!&ndash;            <div class=\"row\">&ndash;&gt;-->\n        <!--&lt;!&ndash;              <div class=\"col-md-4\">&ndash;&gt;-->\n        <!--&lt;!&ndash;                <input type=\"text\" v-model=\"startTime\" class=\"form-control\" placeholder=\"Start Time\">&ndash;&gt;-->\n        <!--&lt;!&ndash;                <input type=\"text\" v-model=\"endTime\" class=\"form-control\" placeholder=\"End Time\">&ndash;&gt;-->\n        <!--&lt;!&ndash;              </div>&ndash;&gt;-->\n        <!--&lt;!&ndash;            </div>&ndash;&gt;-->\n        <!--            -->\n        <!--          </div>-->\n        <!--        </div>-->\n        <div class=\"row container-fluid\" v-if=\"transcribed\" style=\"text-align: left !important;\">\n          <div class=\"col-md-12\">\n            <hr>\n            <div><h3>Meeting Conversation</h3></div>\n            <div class=\"row\" v-for=\"(con,index) in conversation\">\n              <span class=\"col-md-4\">\n                <b>{{ recognizedSpeakers[con.speaker] !== 'Unknown' ?\n                `${recognizedSpeakers[con.speaker].first_name}\n                 ${recognizedSpeakers[con.speaker].last_name}` : 'Speaker ' + con.speaker }} &nbsp;</b>\n                ( {{ con.from }} - {{ con.to }}) :\n              </span>\n              <span class=\"col-md-8\" v-text=\"con.vocal\">\n              </span>\n            </div>\n          </div>\n        </div>\n      </b-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport RegisterUser from '../components/RegisterUser'\nimport RegisterMeeting from '../components/RegisterMeeting'\nimport TrainVoice from './TrainVoice'\n\nexport default {\n  name: 'audioUpload',\n  components: {\n    RegisterUser,\n    RegisterMeeting,\n    TrainVoice\n  },\n  props: [ 'baseurl' ],\n  data () {\n    return {\n      audioChunks: [],\n      rec: {},\n      recordedAudio: {},\n      recordButton: true,\n      show: false,\n      source: '',\n      startTime: '',\n      endTime: '',\n      recordAudio: false,\n      uploadResponse: false,\n      audioFile: null,\n      uploadingStatusText: '',\n      uploadingStatus: false,\n      conversation: [],\n      meetingId: null,\n      transcribed: false,\n      savedAudioFile: null,\n      audioFullPath: '',\n      users: [],\n      recognizedSpeakers:[]\n    }\n  },\n  mounted () {\n  },\n  watch: {\n    savedAudioFile () {\n      let self = this\n      this.$http.get(this.baseurl + '/audio/' + this.savedAudioFile)\n        .then(response => {\n          console.log('audio url', response)\n          self.audioFullPath = 'http://3.16.193.35:5002' + response.data.audio_url\n        })\n        .catch(error => {\n          return ''\n        })\n    }\n  },\n  computed: {\n\n  },\n  methods: {\n    start () {\n      navigator.mediaDevices.getUserMedia({ audio: true })\n        .then(stream => {\n          this.handleCallback(stream)\n        })\n    },\n    stop () {\n      this.rec.stop()\n      this.recordButton = true\n    },\n    handleFileChange () {\n      console.log(this.$refs.file.files[0])\n      this.audioFile = this.$refs.file.files[0]\n    },\n    handleCallback (stream) {\n      this.recordButton = false\n      this.rec = new MediaRecorder(stream)\n      this.audioChunks = []\n      this.rec.start()\n      this.rec.ondataavailable = e => {\n        this.audioChunks.push(e.data)\n        let blob = new Blob(this.audioChunks, { type: 'audio/wav' })\n\n        this.audioFile = blob\n        this.source = URL.createObjectURL(blob)\n        this.$nextTick(() => {\n          this.show = true\n        })\n        this.sendData(blob)\n      }\n    },\n    handleMeetingSaved (event) {\n      this.meetingId = event\n    },\n    handleVoiceRecognized(speakers) {\n      console.log('speakers', speakers);\n      this.recognizedSpeakers = speakers;\n    },\n    submitFile () {\n      var self = this\n      if (!this.audioFile) {\n        alert('File is required.')\n\n        return false\n      }\n      this.uploadingStatusText = 'Uploading...'\n      this.uploadingStatus = true\n      console.log('Uploading file....')\n      let formData = new FormData()\n      formData.append('audio', this.audioFile, 'audio' + Math.floor(Math.random() * 256000) + '.mp3')\n      //axios call here....\n      this.$http.post(this.baseurl + '/upload/audio', formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n        .then((result) => {\n          console.log('File Uploaded successfully. Now transcribing...');\n          this.uploadingStatusText = 'Transcribing...'\n          this.savedAudioFile = result.data.filename\n          this.$http.get(this.baseurl + '/transcribe/' + this.savedAudioFile)\n            .then((transcribedResult) => {\n              console.log('transcribed successfully');\n              self.formatConversation(transcribedResult.data.data)\n              this.uploadingStatus = false\n              self.transcribed = true\n            })\n            .catch((error) => {\n              this.uploadingStatus = false\n            })\n        })\n        .catch((error) => {\n          this.uploadingStatus = false\n        })\n    },\n    formatConversation (result) {\n      console.log('formatting the conversation for display')\n      let results = result.results;\n      let speakerLabels = result.speaker_labels;\n      this.recognizedSpeakers = result.recognized_speakers;\n      let conversations = [];\n      let speakerLabelCount=0;\n      for(let i=0;i<results.length;i++){\n        let r = results[i];\n        let timestamps = r.alternatives[0].timestamps;\n        for (let j = 0; j < timestamps.length; j++) {\n          let a = timestamps[j];\n          a = a.concat(speakerLabels[speakerLabelCount++]);\n          conversations.push(a)\n        }\n      }\n      let formattedConversations = []\n      for (let i = 0; i < conversations.length; i++) {\n        if (i === 0) {\n          formattedConversations.push({\n            'speaker': speakerLabels[i].speaker,\n            'from': conversations[i][3].from,\n            'to': conversations[i][3].to,\n            'vocal': conversations[i][0]\n          })\n        } else {\n          if (conversations[i][3].speaker === conversations[i - 1][3].speaker) {\n            formattedConversations[formattedConversations.length - 1].vocal += ' ' + conversations[i][0]\n            formattedConversations[formattedConversations.length - 1].to = conversations[i][3].to\n          } else {\n            formattedConversations.push({\n              'speaker': speakerLabels[i].speaker,\n              'from': conversations[i][3].from,\n              'to': conversations[i][3].to,\n              'vocal': conversations[i][0]\n            });\n          }\n        }\n      }\n      this.conversation = formattedConversations\n      this.uploadResponse = true\n    },\n    sendData (blob) {\n\n    },\n    getUsers () {\n      console.log('Fetching users...')\n      this.$http.get(this.baseurl + '/attendees')\n        .then(response => {\n          this.users = response.data.data\n        })\n\n    },\n    remove () {\n      this.audioChunks = []\n      this.source = ''\n      this.show = false\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .main-box {\n    box-shadow: 0px 0px 10px 5px darkslategrey !important;\n    flex: 100% !important;\n  }\n\n  .icon {\n    vertical-align: middle;\n    font-size: 1em;\n    color: inherit;\n    height: 2rem;\n    width: 2rem;\n  }\n\n  .loader {\n    border: 16px solid #f3f3f3;\n    border-radius: 50%;\n    border-top: 16px solid #3498db;\n    width: 30px;\n    height: 30px;\n    -webkit-animation: spin 2s linear infinite; /* Safari */\n    animation: spin 2s linear infinite;\n  }\n\n  /* Safari */\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n</style>\n"]}]}